services:
  bot:
    container_name: if-bot
    build:
      ./Bot
    volumes:
      - ./Bot:/app
      - pip-cache:/root/.cache/pip
    networks:
      - app-network
    depends_on:
      Redis:
        condition: service_healthy
    env_file:
      - .env

  
  chat:
    container_name: if-chat
    build:
      ./Chat
    volumes:
      - ./Chat:/app
      - pip-cache:/root/.cache/pip
    networks:
      - app-network
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.chat.rule=Host(`chat.ironfoundry.cc`)"
      - "traefik.http.routers.chat.entrypoints=websecure"
      - "traefik.http.routers.chat.tls.certresolver=cloudflare"
      - "traefik.http.services.chat.loadbalancer.server.port=80"
  

  Redis:
    image: redis:latest
    expose:
      - ${REDIS_PORT}
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}", "--bind", "0.0.0.0"]
    healthcheck:
      test: ["CMD", "redis-cli", "-h", "Redis", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - app-network
    volumes:
      - redis-data:/data
  

networks:
  app-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
  pip-cache:
    driver: local